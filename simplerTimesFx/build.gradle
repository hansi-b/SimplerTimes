plugins {
	id 'distribution'

	id 'org.hansib.application'
	id 'org.hansib.javafx'
}

javafx {
	modules = [
		'javafx.controls',
		'javafx.fxml',
		'javafx.graphics',
		'javafx.swing'
	]
}

dependencies {
	implementation 'org.hansib:sundries:0.5.2'
	implementation 'org.hansib:sundries-fx:0.5.1'

	implementation 'net.harawata:appdirs:1.2.2'

	implementation 'org.controlsfx:controlsfx:11.2.0'

	implementation 'com.dustinredmond.fxtrayicon:FXTrayIcon:4.0.1'

	implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
	implementation 'org.kordamp.ikonli:ikonli-codicons-pack:12.3.1'
	implementation 'org.kordamp.ikonli:ikonli-unicons-pack:12.3.1'
}

application {
	mainClass = 'org.hansib.simplertimes.SimplerTimesLauncher'
}

def currentOs = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem.name
def isWin = currentOs.toLowerCase().contains('win')
assert isWin || currentOs.toLowerCase().contains('linux'): "Cannot handle OS \"$currentOs\""


runtime {

	modules = ['jdk.localedata']
	additive = true // add to suggested modules

	options = [
		'--include-locales', 'en',
		'--strip-debug',
		'--compress', '2',
		'--no-header-files',
		'--no-man-pages'
	]

	launcher {
		jvmArgs = [
			'-Dlog4j.configurationFile=log4j2_prod.yaml',
		]
		noConsole = true
	}

	jpackage {

		appVersion = "${project.version}".split('-')[0]
		installerType = isWin ? 'msi' : 'deb'

		def iconExt = isWin ? 'ico' : 'png'
		imageOptions += [
			'--icon',
			"src/main/resources/logo.$iconExt"
		]

		installerOptions += [
			'--resource-dir',
			'src/main/resources'
		]
		if (isWin) {
			installerOptions += [
				'--win-menu',
				'--win-shortcut',
				'--win-per-user-install'
			]
		}
	}
}

